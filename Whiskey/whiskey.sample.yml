# The `PublishOn` property is a list of branch names. After a successful build on a 
# branch that matches any name in this list, the `Publish` pipeline will run. With 
# an empty `PublishOn` property, your `Publish` pipeline will never run.
#
# Wildcards are supported. For example, if `release/*` is in the list, the 
# `Publish` pipeline would run on the `release/6.3` branch but not the `release`
# branch.
PublishOn:
 - master
 
# The `PublishBuildStatusTo` is a list of publishers where you wnat build status
# information published. Status is published when a build starts, succeeds, and fails. 
# Build statuses are only published when running under a build server. You can only
# report this information to Bitbucket Server.
#
# The BitbucketServer publisher requires two properties:
#
# * Uri: the URI to the Bitbucket Server.
# * CredentialID: the ID of the credential to use when connecting. Credentials are added
#   to the context object returned by `New-WhsCITestContext`, e.g. 
#   `$context.Credentials.Add( 'CREDENTIAL_ID', $credential )
PublishBuildStatusTo:
- BitbucketServer:
    Uri: https://bitbucket.example.com
    CredentialID: BBServer

# An array of build tasks you want to run during a build, e.g.
# 
#     Build:
#     - TASK_NAME:
#         PROPERTY_ONE: VALUE_ONE
#         PROPERTY_TWO: VALUE_TWO
#
# See the documentation for each individual task for YML samples.
Build:
# The Version task sets the current build's version number. You should almost always 
# have one of these.
- Version:
    Version: 0.0.0

    # You can also pull the version from files that store version numbers. Whiskey 
    # supports:
    #
    # * PowerShell module manifests (the ModuleVersion property)
    # * Node package.json files (the Version property)
    # * .NET Core .csproj files (the /Project/PropertyGroup/Version element)
    #
    # Path: Path\to\file

    # The prerelease version to use. Usually you only use this if you're also using the
    # Path property.
    # Prerelease: rc.$(WHISKEY_BUILD_NUMBER)

    # You can also have different prerelease versions for different branches. Set the 
    # property to a list of key/value pairs. The key should be a wildcard pattern that
    # matches a branch, the value should be the prerelease label to use.
    # 
    # Prelease
    # - feature/*: alpha.$(WHISKEY_BUILD_NUMBER)
    # - develop: rc.$(WHISKEY_BUILD_NUMBER)

    # Any build metadata to add. Usually you only use this if you're using the Prerelease
    # and/or Path properties.
    #
    # Build: $(WHISKEY_SCM_BRANCH).$(WHISKEY_SCM_COMMIT_ID)

# An array of tasks you want to run when publishing, e.g.
# 
#     Build:
#     - TASK_NAME:
#         PROPERTY_ONE: VALUE_ONE
#         PROPERTY_TWO: VALUE_TWO
#
# Publishing happens when run under a build server and building on a publishing branch.
# Publishing branches are configured with the `PublishOn` property.
#
# See the documentation for each individual task for YML samples.
Publish:
