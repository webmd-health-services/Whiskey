version: 0.0.0+{build}

skip_tags: true

skip_branch_with_pr: true

build:
  verbosity: minimal

test: off

environment:
  WHISKEY_DISABLE_ERROR_FORMAT: True
  matrix:
  # TODO: Get builds working on PowerShell 7.2 on Windows.
  # - job_name: PowerShell 7.2 on Windows
  #   job_group: pwsh
  #   appveyor_build_worker_image: Visual Studio 2022

  # TODO: Get builds working on macOS.
  # - job_name: PowerShell 7.1 on macOS
  #   job_group: pwsh
  #   appveyor_build_worker_image: macOS

  - job_name: Windows PowerShell 5.1/.NET 4.6.2
    job_group: ps
    appveyor_build_worker_image: Visual Studio 2013

  - job_name: Windows PowerShell 5.1/.NET 4.8
    job_group: ps
    appveyor_build_worker_image: Visual Studio 2019

  - job_name: PowerShell 6.2 on Windows
    job_group: pwsh
    appveyor_build_worker_image: Visual Studio 2015

  - job_name: PowerShell 7.2 on Ubuntu
    job_group: pwsh
    appveyor_build_worker_image: Ubuntu

  - job_name: PowerShell 7.1 on Windows
    job_group: pwsh
    appveyor_build_worker_image: Visual Studio 2019


artifacts:
- path: .output\*


for:
# Build in Windows PowerShell
- matrix:
    only:
    - job_group: ps
  build_script:
  - ps: |
      # Run in a background job so that old PackageManagement assemblies don't get loaded.
      $job = Start-Job {
          $psGalleryRepo = Get-PSRepository -Name 'PSGallery'
          $repoToUse = $psGalleryRepo.Name
          # On Windows 2012 R2, Windows PowerShell 5.1, and .NET 4.6.2, PSGallery's URL ends with a '/'.
          if( -not $psGalleryRepo -or $psgalleryRepo.SourceLocation -ne 'https://www.powershellgallery.com/api/v2' )
          {
              $repoToUse = 'PSGallery2'
              Register-PSRepository -Name $repoToUse `
                                    -InstallationPolicy Trusted `
                                    -SourceLocation 'https://www.powershellgallery.com/api/v2' `
                                    -PackageManagementProvider $psGalleryRepo.PackageManagementProvider
          }
          Get-PSRepository | Format-Table -Auto
          Install-Module -Name 'Prism' -Scope CurrentUser -Repository $repoToUse
      }
      $job | Wait-Job | Receive-Job
      $job | Remove-Job
  - ps: Write-Host $PID ; .\build.ps1

# Build in PowerShell
- matrix:
    only:
    - job_group: pwsh
  build_script:
  - pwsh: |
      Set-PSRepository -Name 'PSGallery' `
                       -InstallationPolicy Trusted `
                       -SourceLocation 'https://www.powershellgallery.com/api/v2'
      Get-PSRepository | Format-Table -Auto
      Install-Module -Name 'Prism' -Scope CurrentUser
  - pwsh: Write-Host $PID ; ./build.ps1
